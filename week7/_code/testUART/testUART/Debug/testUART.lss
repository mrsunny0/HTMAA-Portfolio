
testUART.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000838  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000028  00800060  00000838  000008cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800088  00800088  000008f4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000008f4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000950  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  0000098c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a0a  00000000  00000000  000009d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000062f  00000000  00000000  000013de  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000431  00000000  00000000  00001a0d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000a0  00000000  00000000  00001e40  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003aa  00000000  00000000  00001ee0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000542  00000000  00000000  0000228a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  000027cc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	10 c0       	rjmp	.+32     	; 0x22 <__ctors_end>
   2:	2a c0       	rjmp	.+84     	; 0x58 <__bad_interrupt>
   4:	29 c0       	rjmp	.+82     	; 0x58 <__bad_interrupt>
   6:	28 c0       	rjmp	.+80     	; 0x58 <__bad_interrupt>
   8:	27 c0       	rjmp	.+78     	; 0x58 <__bad_interrupt>
   a:	26 c0       	rjmp	.+76     	; 0x58 <__bad_interrupt>
   c:	25 c0       	rjmp	.+74     	; 0x58 <__bad_interrupt>
   e:	24 c0       	rjmp	.+72     	; 0x58 <__bad_interrupt>
  10:	23 c0       	rjmp	.+70     	; 0x58 <__bad_interrupt>
  12:	22 c0       	rjmp	.+68     	; 0x58 <__bad_interrupt>
  14:	21 c0       	rjmp	.+66     	; 0x58 <__bad_interrupt>
  16:	20 c0       	rjmp	.+64     	; 0x58 <__bad_interrupt>
  18:	1f c0       	rjmp	.+62     	; 0x58 <__bad_interrupt>
  1a:	1e c0       	rjmp	.+60     	; 0x58 <__bad_interrupt>
  1c:	1d c0       	rjmp	.+58     	; 0x58 <__bad_interrupt>
  1e:	1c c0       	rjmp	.+56     	; 0x58 <__bad_interrupt>
  20:	1b c0       	rjmp	.+54     	; 0x58 <__bad_interrupt>

00000022 <__ctors_end>:
  22:	11 24       	eor	r1, r1
  24:	1f be       	out	0x3f, r1	; 63
  26:	cf e5       	ldi	r28, 0x5F	; 95
  28:	d1 e0       	ldi	r29, 0x01	; 1
  2a:	de bf       	out	0x3e, r29	; 62
  2c:	cd bf       	out	0x3d, r28	; 61

0000002e <__do_copy_data>:
  2e:	10 e0       	ldi	r17, 0x00	; 0
  30:	a0 e6       	ldi	r26, 0x60	; 96
  32:	b0 e0       	ldi	r27, 0x00	; 0
  34:	e8 e3       	ldi	r30, 0x38	; 56
  36:	f8 e0       	ldi	r31, 0x08	; 8
  38:	02 c0       	rjmp	.+4      	; 0x3e <__SP_H__>
  3a:	05 90       	lpm	r0, Z+
  3c:	0d 92       	st	X+, r0
  3e:	a8 38       	cpi	r26, 0x88	; 136
  40:	b1 07       	cpc	r27, r17
  42:	d9 f7       	brne	.-10     	; 0x3a <__do_copy_data+0xc>

00000044 <__do_clear_bss>:
  44:	20 e0       	ldi	r18, 0x00	; 0
  46:	a8 e8       	ldi	r26, 0x88	; 136
  48:	b0 e0       	ldi	r27, 0x00	; 0
  4a:	01 c0       	rjmp	.+2      	; 0x4e <.do_clear_bss_start>

0000004c <.do_clear_bss_loop>:
  4c:	1d 92       	st	X+, r1

0000004e <.do_clear_bss_start>:
  4e:	aa 38       	cpi	r26, 0x8A	; 138
  50:	b2 07       	cpc	r27, r18
  52:	e1 f7       	brne	.-8      	; 0x4c <.do_clear_bss_loop>
  54:	fd d0       	rcall	.+506    	; 0x250 <main>
  56:	ee c3       	rjmp	.+2012   	; 0x834 <_exit>

00000058 <__bad_interrupt>:
  58:	d3 cf       	rjmp	.-90     	; 0x0 <__vectors>

0000005a <setup>:
unsigned char reverseByte (unsigned char x) {
  x = ((x >> 1) & 0x55) | ((x << 1) & 0xaa);
  x = ((x >> 2) & 0x33) | ((x << 2) & 0xcc);
  x = ((x >> 4) & 0x0f) | ((x << 4) & 0xf0);
  return x;    
}
  5a:	80 e8       	ldi	r24, 0x80	; 128
  5c:	86 bd       	out	0x26, r24	; 38
  5e:	16 bc       	out	0x26, r1	; 38
  60:	8a b3       	in	r24, 0x1a	; 26
  62:	82 68       	ori	r24, 0x82	; 130
  64:	8a bb       	out	0x1a, r24	; 26
  66:	d9 9a       	sbi	0x1b, 1	; 27
  68:	87 b3       	in	r24, 0x17	; 23
  6a:	87 bb       	out	0x17, r24	; 23
  6c:	c2 9a       	sbi	0x18, 2	; 24
  6e:	08 95       	ret

00000070 <put_char>:

void put_char(volatile unsigned char *PORT, unsigned char PIN, char txchar) {
  70:	fc 01       	movw	r30, r24
	// clear pin
	*PORT &= ~PIN;
  72:	90 81       	ld	r25, Z
  74:	86 2f       	mov	r24, r22
  76:	80 95       	com	r24
  78:	98 23       	and	r25, r24
  7a:	90 83       	st	Z, r25
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  7c:	95 e3       	ldi	r25, 0x35	; 53
  7e:	9a 95       	dec	r25
  80:	f1 f7       	brne	.-4      	; 0x7e <put_char+0xe>
  82:	00 00       	nop
	bit_delay();

	// unraveled for loop
	// note, for some reason putting this in for loop doesn't work for UART timing
	if (txchar & (1<<0)) {
  84:	40 ff       	sbrs	r20, 0
  86:	04 c0       	rjmp	.+8      	; 0x90 <put_char+0x20>
		*PORT |= PIN;
  88:	90 81       	ld	r25, Z
  8a:	96 2b       	or	r25, r22
  8c:	90 83       	st	Z, r25
  8e:	03 c0       	rjmp	.+6      	; 0x96 <put_char+0x26>
	} else {
		*PORT &= ~PIN;
  90:	90 81       	ld	r25, Z
  92:	98 23       	and	r25, r24
  94:	90 83       	st	Z, r25
  96:	95 e3       	ldi	r25, 0x35	; 53
  98:	9a 95       	dec	r25
  9a:	f1 f7       	brne	.-4      	; 0x98 <put_char+0x28>
  9c:	00 00       	nop
	}
	bit_delay();
	if (txchar & (1<<1)) {
  9e:	41 ff       	sbrs	r20, 1
  a0:	04 c0       	rjmp	.+8      	; 0xaa <put_char+0x3a>
		*PORT |= PIN;
  a2:	90 81       	ld	r25, Z
  a4:	96 2b       	or	r25, r22
  a6:	90 83       	st	Z, r25
  a8:	03 c0       	rjmp	.+6      	; 0xb0 <put_char+0x40>
		} else {
		*PORT &= ~PIN;
  aa:	90 81       	ld	r25, Z
  ac:	98 23       	and	r25, r24
  ae:	90 83       	st	Z, r25
  b0:	95 e3       	ldi	r25, 0x35	; 53
  b2:	9a 95       	dec	r25
  b4:	f1 f7       	brne	.-4      	; 0xb2 <put_char+0x42>
  b6:	00 00       	nop
	}
	bit_delay();
	if (txchar & (1<<2)) {
  b8:	42 ff       	sbrs	r20, 2
  ba:	04 c0       	rjmp	.+8      	; 0xc4 <put_char+0x54>
		*PORT |= PIN;
  bc:	90 81       	ld	r25, Z
  be:	96 2b       	or	r25, r22
  c0:	90 83       	st	Z, r25
  c2:	03 c0       	rjmp	.+6      	; 0xca <put_char+0x5a>
		} else {
		*PORT &= ~PIN;
  c4:	90 81       	ld	r25, Z
  c6:	98 23       	and	r25, r24
  c8:	90 83       	st	Z, r25
  ca:	95 e3       	ldi	r25, 0x35	; 53
  cc:	9a 95       	dec	r25
  ce:	f1 f7       	brne	.-4      	; 0xcc <put_char+0x5c>
  d0:	00 00       	nop
	}
	bit_delay();
	if (txchar & (1<<3)) {
  d2:	43 ff       	sbrs	r20, 3
  d4:	04 c0       	rjmp	.+8      	; 0xde <put_char+0x6e>
		*PORT |= PIN;
  d6:	90 81       	ld	r25, Z
  d8:	96 2b       	or	r25, r22
  da:	90 83       	st	Z, r25
  dc:	03 c0       	rjmp	.+6      	; 0xe4 <put_char+0x74>
		} else {
		*PORT &= ~PIN;
  de:	90 81       	ld	r25, Z
  e0:	98 23       	and	r25, r24
  e2:	90 83       	st	Z, r25
  e4:	95 e3       	ldi	r25, 0x35	; 53
  e6:	9a 95       	dec	r25
  e8:	f1 f7       	brne	.-4      	; 0xe6 <put_char+0x76>
  ea:	00 00       	nop
	}
	bit_delay();	
	if (txchar & (1<<4)) {
  ec:	44 ff       	sbrs	r20, 4
  ee:	04 c0       	rjmp	.+8      	; 0xf8 <put_char+0x88>
		*PORT |= PIN;
  f0:	90 81       	ld	r25, Z
  f2:	96 2b       	or	r25, r22
  f4:	90 83       	st	Z, r25
  f6:	03 c0       	rjmp	.+6      	; 0xfe <put_char+0x8e>
		} else {
		*PORT &= ~PIN;
  f8:	90 81       	ld	r25, Z
  fa:	98 23       	and	r25, r24
  fc:	90 83       	st	Z, r25
  fe:	95 e3       	ldi	r25, 0x35	; 53
 100:	9a 95       	dec	r25
 102:	f1 f7       	brne	.-4      	; 0x100 <put_char+0x90>
 104:	00 00       	nop
	}
	bit_delay();
	if (txchar & (1<<5)) {
 106:	45 ff       	sbrs	r20, 5
 108:	04 c0       	rjmp	.+8      	; 0x112 <put_char+0xa2>
		*PORT |= PIN;
 10a:	90 81       	ld	r25, Z
 10c:	96 2b       	or	r25, r22
 10e:	90 83       	st	Z, r25
 110:	03 c0       	rjmp	.+6      	; 0x118 <put_char+0xa8>
		} else {
		*PORT &= ~PIN;
 112:	90 81       	ld	r25, Z
 114:	98 23       	and	r25, r24
 116:	90 83       	st	Z, r25
 118:	95 e3       	ldi	r25, 0x35	; 53
 11a:	9a 95       	dec	r25
 11c:	f1 f7       	brne	.-4      	; 0x11a <put_char+0xaa>
 11e:	00 00       	nop
	}
	bit_delay();	
	if (txchar & (1<<6)) {
 120:	46 ff       	sbrs	r20, 6
 122:	04 c0       	rjmp	.+8      	; 0x12c <put_char+0xbc>
		*PORT |= PIN;
 124:	90 81       	ld	r25, Z
 126:	96 2b       	or	r25, r22
 128:	90 83       	st	Z, r25
 12a:	03 c0       	rjmp	.+6      	; 0x132 <put_char+0xc2>
		} else {
		*PORT &= ~PIN;
 12c:	90 81       	ld	r25, Z
 12e:	98 23       	and	r25, r24
 130:	90 83       	st	Z, r25
 132:	95 e3       	ldi	r25, 0x35	; 53
 134:	9a 95       	dec	r25
 136:	f1 f7       	brne	.-4      	; 0x134 <put_char+0xc4>
 138:	00 00       	nop
	}
	bit_delay();
	if (txchar & (1<<7)) {
 13a:	44 23       	and	r20, r20
 13c:	24 f4       	brge	.+8      	; 0x146 <put_char+0xd6>
		*PORT |= PIN;
 13e:	80 81       	ld	r24, Z
 140:	86 2b       	or	r24, r22
 142:	80 83       	st	Z, r24
 144:	03 c0       	rjmp	.+6      	; 0x14c <put_char+0xdc>
		} else {
		*PORT &= ~PIN;
 146:	90 81       	ld	r25, Z
 148:	89 23       	and	r24, r25
 14a:	80 83       	st	Z, r24
 14c:	85 e3       	ldi	r24, 0x35	; 53
 14e:	8a 95       	dec	r24
 150:	f1 f7       	brne	.-4      	; 0x14e <put_char+0xde>
 152:	00 00       	nop
	}							
	bit_delay();	

	// stop bit
	*PORT |= PIN;
 154:	80 81       	ld	r24, Z
 156:	68 2b       	or	r22, r24
 158:	60 83       	st	Z, r22
 15a:	95 e3       	ldi	r25, 0x35	; 53
 15c:	9a 95       	dec	r25
 15e:	f1 f7       	brne	.-4      	; 0x15c <put_char+0xec>
 160:	00 00       	nop
 162:	85 e3       	ldi	r24, 0x35	; 53
 164:	8a 95       	dec	r24
 166:	f1 f7       	brne	.-4      	; 0x164 <__stack+0x5>
 168:	00 00       	nop
 16a:	08 95       	ret

0000016c <put_string>:
	bit_delay();
	// char delay
	bit_delay();
}

void put_string(volatile unsigned char *PORT, unsigned char PIN, char *str) {
 16c:	ff 92       	push	r15
 16e:	0f 93       	push	r16
 170:	1f 93       	push	r17
 172:	cf 93       	push	r28
 174:	df 93       	push	r29
 176:	ec 01       	movw	r28, r24
 178:	f6 2e       	mov	r15, r22
 17a:	8a 01       	movw	r16, r20
	static int index;
	index = 0;
 17c:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__data_end+0x1>
 180:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__data_end>
	do {
		put_char(PORT, PIN, str[index]);
 184:	e0 91 88 00 	lds	r30, 0x0088	; 0x800088 <__data_end>
 188:	f0 91 89 00 	lds	r31, 0x0089	; 0x800089 <__data_end+0x1>
 18c:	e0 0f       	add	r30, r16
 18e:	f1 1f       	adc	r31, r17
 190:	40 81       	ld	r20, Z
 192:	6f 2d       	mov	r22, r15
 194:	ce 01       	movw	r24, r28
 196:	6c df       	rcall	.-296    	; 0x70 <put_char>
		++index;
 198:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <__data_end>
 19c:	90 91 89 00 	lds	r25, 0x0089	; 0x800089 <__data_end+0x1>
 1a0:	01 96       	adiw	r24, 0x01	; 1
 1a2:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__data_end+0x1>
 1a6:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__data_end>
	} 
	while (str[index] != 0);
 1aa:	f8 01       	movw	r30, r16
 1ac:	e8 0f       	add	r30, r24
 1ae:	f9 1f       	adc	r31, r25
 1b0:	80 81       	ld	r24, Z
 1b2:	81 11       	cpse	r24, r1
 1b4:	e7 cf       	rjmp	.-50     	; 0x184 <put_string+0x18>
}
 1b6:	df 91       	pop	r29
 1b8:	cf 91       	pop	r28
 1ba:	1f 91       	pop	r17
 1bc:	0f 91       	pop	r16
 1be:	ff 90       	pop	r15
 1c0:	08 95       	ret

000001c2 <button_press>:

int button_press(int prev_state) {
 1c2:	cf 93       	push	r28
 1c4:	df 93       	push	r29
 1c6:	00 d0       	rcall	.+0      	; 0x1c8 <button_press+0x6>
 1c8:	00 d0       	rcall	.+0      	; 0x1ca <button_press+0x8>
 1ca:	cd b7       	in	r28, 0x3d	; 61
 1cc:	de b7       	in	r29, 0x3e	; 62
	// button presses
	static unsigned int PRESSES = 1;
	char OUT[4];
	sprintf(OUT, "%d", PRESSES);
 1ce:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <__data_start+0x1>
 1d2:	8f 93       	push	r24
 1d4:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__data_start>
 1d8:	8f 93       	push	r24
 1da:	82 e6       	ldi	r24, 0x62	; 98
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	9f 93       	push	r25
 1e0:	8f 93       	push	r24
 1e2:	ce 01       	movw	r24, r28
 1e4:	01 96       	adiw	r24, 0x01	; 1
 1e6:	9f 93       	push	r25
 1e8:	8f 93       	push	r24
 1ea:	40 d0       	rcall	.+128    	; 0x26c <sprintf>
	
	// pin is LOW (pressed) and state before was off (0) 
	if (!(PINB & (1<<PINB2))) {
 1ec:	0f 90       	pop	r0
 1ee:	0f 90       	pop	r0
 1f0:	0f 90       	pop	r0
 1f2:	0f 90       	pop	r0
 1f4:	0f 90       	pop	r0
 1f6:	0f 90       	pop	r0
 1f8:	b2 99       	sbic	0x16, 2	; 22
 1fa:	20 c0       	rjmp	.+64     	; 0x23c <button_press+0x7a>
		PRESSES++;
 1fc:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__data_start>
 200:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__data_start+0x1>
 204:	01 96       	adiw	r24, 0x01	; 1
 206:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__data_start+0x1>
 20a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__data_start>
		PORTA |= (1<<PORTA7);
 20e:	df 9a       	sbi	0x1b, 7	; 27
		put_string(&PORTA, (1<<PORTA1), "pressed button: ");
 210:	45 e6       	ldi	r20, 0x65	; 101
 212:	50 e0       	ldi	r21, 0x00	; 0
 214:	62 e0       	ldi	r22, 0x02	; 2
 216:	8b e3       	ldi	r24, 0x3B	; 59
 218:	90 e0       	ldi	r25, 0x00	; 0
 21a:	a8 df       	rcall	.-176    	; 0x16c <put_string>
		put_string(&PORTA, (1<<PORTA1), OUT);
 21c:	ae 01       	movw	r20, r28
 21e:	4f 5f       	subi	r20, 0xFF	; 255
 220:	5f 4f       	sbci	r21, 0xFF	; 255
 222:	62 e0       	ldi	r22, 0x02	; 2
 224:	8b e3       	ldi	r24, 0x3B	; 59
 226:	90 e0       	ldi	r25, 0x00	; 0
 228:	a1 df       	rcall	.-190    	; 0x16c <put_string>
		put_string(&PORTA, (1<<PORTA1), " number of times\n");
 22a:	46 e7       	ldi	r20, 0x76	; 118
 22c:	50 e0       	ldi	r21, 0x00	; 0
 22e:	62 e0       	ldi	r22, 0x02	; 2
 230:	8b e3       	ldi	r24, 0x3B	; 59
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	9b df       	rcall	.-202    	; 0x16c <put_string>
		return 0;
 236:	80 e0       	ldi	r24, 0x00	; 0
 238:	90 e0       	ldi	r25, 0x00	; 0
 23a:	03 c0       	rjmp	.+6      	; 0x242 <button_press+0x80>
	}
	else {
		PORTA &= ~(1<<PORTA7);
 23c:	df 98       	cbi	0x1b, 7	; 27
		return 1;
 23e:	81 e0       	ldi	r24, 0x01	; 1
 240:	90 e0       	ldi	r25, 0x00	; 0
	}
}
 242:	0f 90       	pop	r0
 244:	0f 90       	pop	r0
 246:	0f 90       	pop	r0
 248:	0f 90       	pop	r0
 24a:	df 91       	pop	r29
 24c:	cf 91       	pop	r28
 24e:	08 95       	ret

00000250 <main>:

int main(void) {	
	setup();
 250:	04 df       	rcall	.-504    	; 0x5a <setup>
	int button_value=0; 
 252:	80 e0       	ldi	r24, 0x00	; 0
 254:	90 e0       	ldi	r25, 0x00	; 0
	while (1) {
		button_value = button_press(button_value);
 256:	b5 df       	rcall	.-150    	; 0x1c2 <button_press>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 258:	2f ef       	ldi	r18, 0xFF	; 255
 25a:	34 e3       	ldi	r19, 0x34	; 52
 25c:	4c e0       	ldi	r20, 0x0C	; 12
 25e:	21 50       	subi	r18, 0x01	; 1
 260:	30 40       	sbci	r19, 0x00	; 0
 262:	40 40       	sbci	r20, 0x00	; 0
 264:	e1 f7       	brne	.-8      	; 0x25e <main+0xe>
 266:	00 c0       	rjmp	.+0      	; 0x268 <main+0x18>
 268:	00 00       	nop
 26a:	f5 cf       	rjmp	.-22     	; 0x256 <main+0x6>

0000026c <sprintf>:
 26c:	ae e0       	ldi	r26, 0x0E	; 14
 26e:	b0 e0       	ldi	r27, 0x00	; 0
 270:	eb e3       	ldi	r30, 0x3B	; 59
 272:	f1 e0       	ldi	r31, 0x01	; 1
 274:	b6 c2       	rjmp	.+1388   	; 0x7e2 <__prologue_saves__+0x1c>
 276:	0d 89       	ldd	r16, Y+21	; 0x15
 278:	1e 89       	ldd	r17, Y+22	; 0x16
 27a:	86 e0       	ldi	r24, 0x06	; 6
 27c:	8c 83       	std	Y+4, r24	; 0x04
 27e:	1a 83       	std	Y+2, r17	; 0x02
 280:	09 83       	std	Y+1, r16	; 0x01
 282:	8f ef       	ldi	r24, 0xFF	; 255
 284:	9f e7       	ldi	r25, 0x7F	; 127
 286:	9e 83       	std	Y+6, r25	; 0x06
 288:	8d 83       	std	Y+5, r24	; 0x05
 28a:	ae 01       	movw	r20, r28
 28c:	47 5e       	subi	r20, 0xE7	; 231
 28e:	5f 4f       	sbci	r21, 0xFF	; 255
 290:	6f 89       	ldd	r22, Y+23	; 0x17
 292:	78 8d       	ldd	r23, Y+24	; 0x18
 294:	ce 01       	movw	r24, r28
 296:	01 96       	adiw	r24, 0x01	; 1
 298:	08 d0       	rcall	.+16     	; 0x2aa <vfprintf>
 29a:	ef 81       	ldd	r30, Y+7	; 0x07
 29c:	f8 85       	ldd	r31, Y+8	; 0x08
 29e:	e0 0f       	add	r30, r16
 2a0:	f1 1f       	adc	r31, r17
 2a2:	10 82       	st	Z, r1
 2a4:	2e 96       	adiw	r28, 0x0e	; 14
 2a6:	e4 e0       	ldi	r30, 0x04	; 4
 2a8:	b8 c2       	rjmp	.+1392   	; 0x81a <__epilogue_restores__+0x1c>

000002aa <vfprintf>:
 2aa:	ab e0       	ldi	r26, 0x0B	; 11
 2ac:	b0 e0       	ldi	r27, 0x00	; 0
 2ae:	ea e5       	ldi	r30, 0x5A	; 90
 2b0:	f1 e0       	ldi	r31, 0x01	; 1
 2b2:	89 c2       	rjmp	.+1298   	; 0x7c6 <__prologue_saves__>
 2b4:	6c 01       	movw	r12, r24
 2b6:	7b 01       	movw	r14, r22
 2b8:	8a 01       	movw	r16, r20
 2ba:	fc 01       	movw	r30, r24
 2bc:	17 82       	std	Z+7, r1	; 0x07
 2be:	16 82       	std	Z+6, r1	; 0x06
 2c0:	83 81       	ldd	r24, Z+3	; 0x03
 2c2:	81 ff       	sbrs	r24, 1
 2c4:	c0 c1       	rjmp	.+896    	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
 2c6:	ce 01       	movw	r24, r28
 2c8:	01 96       	adiw	r24, 0x01	; 1
 2ca:	3c 01       	movw	r6, r24
 2cc:	f6 01       	movw	r30, r12
 2ce:	93 81       	ldd	r25, Z+3	; 0x03
 2d0:	f7 01       	movw	r30, r14
 2d2:	93 fd       	sbrc	r25, 3
 2d4:	85 91       	lpm	r24, Z+
 2d6:	93 ff       	sbrs	r25, 3
 2d8:	81 91       	ld	r24, Z+
 2da:	7f 01       	movw	r14, r30
 2dc:	88 23       	and	r24, r24
 2de:	09 f4       	brne	.+2      	; 0x2e2 <vfprintf+0x38>
 2e0:	ae c1       	rjmp	.+860    	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
 2e2:	85 32       	cpi	r24, 0x25	; 37
 2e4:	39 f4       	brne	.+14     	; 0x2f4 <vfprintf+0x4a>
 2e6:	93 fd       	sbrc	r25, 3
 2e8:	85 91       	lpm	r24, Z+
 2ea:	93 ff       	sbrs	r25, 3
 2ec:	81 91       	ld	r24, Z+
 2ee:	7f 01       	movw	r14, r30
 2f0:	85 32       	cpi	r24, 0x25	; 37
 2f2:	21 f4       	brne	.+8      	; 0x2fc <vfprintf+0x52>
 2f4:	b6 01       	movw	r22, r12
 2f6:	90 e0       	ldi	r25, 0x00	; 0
 2f8:	c1 d1       	rcall	.+898    	; 0x67c <fputc>
 2fa:	e8 cf       	rjmp	.-48     	; 0x2cc <vfprintf+0x22>
 2fc:	91 2c       	mov	r9, r1
 2fe:	21 2c       	mov	r2, r1
 300:	31 2c       	mov	r3, r1
 302:	ff e1       	ldi	r31, 0x1F	; 31
 304:	f3 15       	cp	r31, r3
 306:	e0 f0       	brcs	.+56     	; 0x340 <vfprintf+0x96>
 308:	8b 32       	cpi	r24, 0x2B	; 43
 30a:	79 f0       	breq	.+30     	; 0x32a <vfprintf+0x80>
 30c:	38 f4       	brcc	.+14     	; 0x31c <vfprintf+0x72>
 30e:	80 32       	cpi	r24, 0x20	; 32
 310:	79 f0       	breq	.+30     	; 0x330 <vfprintf+0x86>
 312:	83 32       	cpi	r24, 0x23	; 35
 314:	a9 f4       	brne	.+42     	; 0x340 <vfprintf+0x96>
 316:	23 2d       	mov	r18, r3
 318:	20 61       	ori	r18, 0x10	; 16
 31a:	10 c0       	rjmp	.+32     	; 0x33c <vfprintf+0x92>
 31c:	8d 32       	cpi	r24, 0x2D	; 45
 31e:	59 f0       	breq	.+22     	; 0x336 <vfprintf+0x8c>
 320:	80 33       	cpi	r24, 0x30	; 48
 322:	71 f4       	brne	.+28     	; 0x340 <vfprintf+0x96>
 324:	23 2d       	mov	r18, r3
 326:	21 60       	ori	r18, 0x01	; 1
 328:	09 c0       	rjmp	.+18     	; 0x33c <vfprintf+0x92>
 32a:	83 2d       	mov	r24, r3
 32c:	82 60       	ori	r24, 0x02	; 2
 32e:	38 2e       	mov	r3, r24
 330:	e3 2d       	mov	r30, r3
 332:	e4 60       	ori	r30, 0x04	; 4
 334:	22 c0       	rjmp	.+68     	; 0x37a <vfprintf+0xd0>
 336:	f3 2d       	mov	r31, r3
 338:	f8 60       	ori	r31, 0x08	; 8
 33a:	25 c0       	rjmp	.+74     	; 0x386 <vfprintf+0xdc>
 33c:	32 2e       	mov	r3, r18
 33e:	27 c0       	rjmp	.+78     	; 0x38e <vfprintf+0xe4>
 340:	37 fc       	sbrc	r3, 7
 342:	2d c0       	rjmp	.+90     	; 0x39e <vfprintf+0xf4>
 344:	20 ed       	ldi	r18, 0xD0	; 208
 346:	28 0f       	add	r18, r24
 348:	2a 30       	cpi	r18, 0x0A	; 10
 34a:	88 f4       	brcc	.+34     	; 0x36e <vfprintf+0xc4>
 34c:	36 fe       	sbrs	r3, 6
 34e:	06 c0       	rjmp	.+12     	; 0x35c <vfprintf+0xb2>
 350:	89 2d       	mov	r24, r9
 352:	6a e0       	ldi	r22, 0x0A	; 10
 354:	2f d2       	rcall	.+1118   	; 0x7b4 <__mulqi3>
 356:	92 2e       	mov	r9, r18
 358:	98 0e       	add	r9, r24
 35a:	19 c0       	rjmp	.+50     	; 0x38e <vfprintf+0xe4>
 35c:	82 2d       	mov	r24, r2
 35e:	6a e0       	ldi	r22, 0x0A	; 10
 360:	29 d2       	rcall	.+1106   	; 0x7b4 <__mulqi3>
 362:	22 2e       	mov	r2, r18
 364:	28 0e       	add	r2, r24
 366:	83 2d       	mov	r24, r3
 368:	80 62       	ori	r24, 0x20	; 32
 36a:	38 2e       	mov	r3, r24
 36c:	10 c0       	rjmp	.+32     	; 0x38e <vfprintf+0xe4>
 36e:	8e 32       	cpi	r24, 0x2E	; 46
 370:	31 f4       	brne	.+12     	; 0x37e <vfprintf+0xd4>
 372:	36 fc       	sbrc	r3, 6
 374:	64 c1       	rjmp	.+712    	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
 376:	e3 2d       	mov	r30, r3
 378:	e0 64       	ori	r30, 0x40	; 64
 37a:	3e 2e       	mov	r3, r30
 37c:	08 c0       	rjmp	.+16     	; 0x38e <vfprintf+0xe4>
 37e:	8c 36       	cpi	r24, 0x6C	; 108
 380:	21 f4       	brne	.+8      	; 0x38a <vfprintf+0xe0>
 382:	f3 2d       	mov	r31, r3
 384:	f0 68       	ori	r31, 0x80	; 128
 386:	3f 2e       	mov	r3, r31
 388:	02 c0       	rjmp	.+4      	; 0x38e <vfprintf+0xe4>
 38a:	88 36       	cpi	r24, 0x68	; 104
 38c:	41 f4       	brne	.+16     	; 0x39e <vfprintf+0xf4>
 38e:	f7 01       	movw	r30, r14
 390:	93 fd       	sbrc	r25, 3
 392:	85 91       	lpm	r24, Z+
 394:	93 ff       	sbrs	r25, 3
 396:	81 91       	ld	r24, Z+
 398:	7f 01       	movw	r14, r30
 39a:	81 11       	cpse	r24, r1
 39c:	b2 cf       	rjmp	.-156    	; 0x302 <vfprintf+0x58>
 39e:	98 2f       	mov	r25, r24
 3a0:	9f 7d       	andi	r25, 0xDF	; 223
 3a2:	95 54       	subi	r25, 0x45	; 69
 3a4:	93 30       	cpi	r25, 0x03	; 3
 3a6:	28 f4       	brcc	.+10     	; 0x3b2 <vfprintf+0x108>
 3a8:	0c 5f       	subi	r16, 0xFC	; 252
 3aa:	1f 4f       	sbci	r17, 0xFF	; 255
 3ac:	2f e3       	ldi	r18, 0x3F	; 63
 3ae:	29 83       	std	Y+1, r18	; 0x01
 3b0:	0d c0       	rjmp	.+26     	; 0x3cc <vfprintf+0x122>
 3b2:	83 36       	cpi	r24, 0x63	; 99
 3b4:	31 f0       	breq	.+12     	; 0x3c2 <vfprintf+0x118>
 3b6:	83 37       	cpi	r24, 0x73	; 115
 3b8:	71 f0       	breq	.+28     	; 0x3d6 <vfprintf+0x12c>
 3ba:	83 35       	cpi	r24, 0x53	; 83
 3bc:	09 f0       	breq	.+2      	; 0x3c0 <vfprintf+0x116>
 3be:	55 c0       	rjmp	.+170    	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 3c0:	20 c0       	rjmp	.+64     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3c2:	f8 01       	movw	r30, r16
 3c4:	80 81       	ld	r24, Z
 3c6:	89 83       	std	Y+1, r24	; 0x01
 3c8:	0e 5f       	subi	r16, 0xFE	; 254
 3ca:	1f 4f       	sbci	r17, 0xFF	; 255
 3cc:	88 24       	eor	r8, r8
 3ce:	83 94       	inc	r8
 3d0:	91 2c       	mov	r9, r1
 3d2:	53 01       	movw	r10, r6
 3d4:	12 c0       	rjmp	.+36     	; 0x3fa <vfprintf+0x150>
 3d6:	28 01       	movw	r4, r16
 3d8:	f2 e0       	ldi	r31, 0x02	; 2
 3da:	4f 0e       	add	r4, r31
 3dc:	51 1c       	adc	r5, r1
 3de:	f8 01       	movw	r30, r16
 3e0:	a0 80       	ld	r10, Z
 3e2:	b1 80       	ldd	r11, Z+1	; 0x01
 3e4:	36 fe       	sbrs	r3, 6
 3e6:	03 c0       	rjmp	.+6      	; 0x3ee <vfprintf+0x144>
 3e8:	69 2d       	mov	r22, r9
 3ea:	70 e0       	ldi	r23, 0x00	; 0
 3ec:	02 c0       	rjmp	.+4      	; 0x3f2 <vfprintf+0x148>
 3ee:	6f ef       	ldi	r22, 0xFF	; 255
 3f0:	7f ef       	ldi	r23, 0xFF	; 255
 3f2:	c5 01       	movw	r24, r10
 3f4:	38 d1       	rcall	.+624    	; 0x666 <strnlen>
 3f6:	4c 01       	movw	r8, r24
 3f8:	82 01       	movw	r16, r4
 3fa:	f3 2d       	mov	r31, r3
 3fc:	ff 77       	andi	r31, 0x7F	; 127
 3fe:	3f 2e       	mov	r3, r31
 400:	15 c0       	rjmp	.+42     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 402:	28 01       	movw	r4, r16
 404:	22 e0       	ldi	r18, 0x02	; 2
 406:	42 0e       	add	r4, r18
 408:	51 1c       	adc	r5, r1
 40a:	f8 01       	movw	r30, r16
 40c:	a0 80       	ld	r10, Z
 40e:	b1 80       	ldd	r11, Z+1	; 0x01
 410:	36 fe       	sbrs	r3, 6
 412:	03 c0       	rjmp	.+6      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 414:	69 2d       	mov	r22, r9
 416:	70 e0       	ldi	r23, 0x00	; 0
 418:	02 c0       	rjmp	.+4      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 41a:	6f ef       	ldi	r22, 0xFF	; 255
 41c:	7f ef       	ldi	r23, 0xFF	; 255
 41e:	c5 01       	movw	r24, r10
 420:	17 d1       	rcall	.+558    	; 0x650 <strnlen_P>
 422:	4c 01       	movw	r8, r24
 424:	f3 2d       	mov	r31, r3
 426:	f0 68       	ori	r31, 0x80	; 128
 428:	3f 2e       	mov	r3, r31
 42a:	82 01       	movw	r16, r4
 42c:	33 fc       	sbrc	r3, 3
 42e:	19 c0       	rjmp	.+50     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 430:	82 2d       	mov	r24, r2
 432:	90 e0       	ldi	r25, 0x00	; 0
 434:	88 16       	cp	r8, r24
 436:	99 06       	cpc	r9, r25
 438:	a0 f4       	brcc	.+40     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 43a:	b6 01       	movw	r22, r12
 43c:	80 e2       	ldi	r24, 0x20	; 32
 43e:	90 e0       	ldi	r25, 0x00	; 0
 440:	1d d1       	rcall	.+570    	; 0x67c <fputc>
 442:	2a 94       	dec	r2
 444:	f5 cf       	rjmp	.-22     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 446:	f5 01       	movw	r30, r10
 448:	37 fc       	sbrc	r3, 7
 44a:	85 91       	lpm	r24, Z+
 44c:	37 fe       	sbrs	r3, 7
 44e:	81 91       	ld	r24, Z+
 450:	5f 01       	movw	r10, r30
 452:	b6 01       	movw	r22, r12
 454:	90 e0       	ldi	r25, 0x00	; 0
 456:	12 d1       	rcall	.+548    	; 0x67c <fputc>
 458:	21 10       	cpse	r2, r1
 45a:	2a 94       	dec	r2
 45c:	21 e0       	ldi	r18, 0x01	; 1
 45e:	82 1a       	sub	r8, r18
 460:	91 08       	sbc	r9, r1
 462:	81 14       	cp	r8, r1
 464:	91 04       	cpc	r9, r1
 466:	79 f7       	brne	.-34     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 468:	e1 c0       	rjmp	.+450    	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
 46a:	84 36       	cpi	r24, 0x64	; 100
 46c:	11 f0       	breq	.+4      	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 46e:	89 36       	cpi	r24, 0x69	; 105
 470:	39 f5       	brne	.+78     	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
 472:	f8 01       	movw	r30, r16
 474:	37 fe       	sbrs	r3, 7
 476:	07 c0       	rjmp	.+14     	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 478:	60 81       	ld	r22, Z
 47a:	71 81       	ldd	r23, Z+1	; 0x01
 47c:	82 81       	ldd	r24, Z+2	; 0x02
 47e:	93 81       	ldd	r25, Z+3	; 0x03
 480:	0c 5f       	subi	r16, 0xFC	; 252
 482:	1f 4f       	sbci	r17, 0xFF	; 255
 484:	08 c0       	rjmp	.+16     	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 486:	60 81       	ld	r22, Z
 488:	71 81       	ldd	r23, Z+1	; 0x01
 48a:	07 2e       	mov	r0, r23
 48c:	00 0c       	add	r0, r0
 48e:	88 0b       	sbc	r24, r24
 490:	99 0b       	sbc	r25, r25
 492:	0e 5f       	subi	r16, 0xFE	; 254
 494:	1f 4f       	sbci	r17, 0xFF	; 255
 496:	f3 2d       	mov	r31, r3
 498:	ff 76       	andi	r31, 0x6F	; 111
 49a:	3f 2e       	mov	r3, r31
 49c:	97 ff       	sbrs	r25, 7
 49e:	09 c0       	rjmp	.+18     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 4a0:	90 95       	com	r25
 4a2:	80 95       	com	r24
 4a4:	70 95       	com	r23
 4a6:	61 95       	neg	r22
 4a8:	7f 4f       	sbci	r23, 0xFF	; 255
 4aa:	8f 4f       	sbci	r24, 0xFF	; 255
 4ac:	9f 4f       	sbci	r25, 0xFF	; 255
 4ae:	f0 68       	ori	r31, 0x80	; 128
 4b0:	3f 2e       	mov	r3, r31
 4b2:	2a e0       	ldi	r18, 0x0A	; 10
 4b4:	30 e0       	ldi	r19, 0x00	; 0
 4b6:	a3 01       	movw	r20, r6
 4b8:	1d d1       	rcall	.+570    	; 0x6f4 <__ultoa_invert>
 4ba:	88 2e       	mov	r8, r24
 4bc:	86 18       	sub	r8, r6
 4be:	44 c0       	rjmp	.+136    	; 0x548 <__LOCK_REGION_LENGTH__+0x148>
 4c0:	85 37       	cpi	r24, 0x75	; 117
 4c2:	31 f4       	brne	.+12     	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 4c4:	23 2d       	mov	r18, r3
 4c6:	2f 7e       	andi	r18, 0xEF	; 239
 4c8:	b2 2e       	mov	r11, r18
 4ca:	2a e0       	ldi	r18, 0x0A	; 10
 4cc:	30 e0       	ldi	r19, 0x00	; 0
 4ce:	25 c0       	rjmp	.+74     	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 4d0:	93 2d       	mov	r25, r3
 4d2:	99 7f       	andi	r25, 0xF9	; 249
 4d4:	b9 2e       	mov	r11, r25
 4d6:	8f 36       	cpi	r24, 0x6F	; 111
 4d8:	c1 f0       	breq	.+48     	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
 4da:	18 f4       	brcc	.+6      	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 4dc:	88 35       	cpi	r24, 0x58	; 88
 4de:	79 f0       	breq	.+30     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4e0:	ae c0       	rjmp	.+348    	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
 4e2:	80 37       	cpi	r24, 0x70	; 112
 4e4:	19 f0       	breq	.+6      	; 0x4ec <__LOCK_REGION_LENGTH__+0xec>
 4e6:	88 37       	cpi	r24, 0x78	; 120
 4e8:	21 f0       	breq	.+8      	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
 4ea:	a9 c0       	rjmp	.+338    	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
 4ec:	e9 2f       	mov	r30, r25
 4ee:	e0 61       	ori	r30, 0x10	; 16
 4f0:	be 2e       	mov	r11, r30
 4f2:	b4 fe       	sbrs	r11, 4
 4f4:	0d c0       	rjmp	.+26     	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 4f6:	fb 2d       	mov	r31, r11
 4f8:	f4 60       	ori	r31, 0x04	; 4
 4fa:	bf 2e       	mov	r11, r31
 4fc:	09 c0       	rjmp	.+18     	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 4fe:	34 fe       	sbrs	r3, 4
 500:	0a c0       	rjmp	.+20     	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 502:	29 2f       	mov	r18, r25
 504:	26 60       	ori	r18, 0x06	; 6
 506:	b2 2e       	mov	r11, r18
 508:	06 c0       	rjmp	.+12     	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 50a:	28 e0       	ldi	r18, 0x08	; 8
 50c:	30 e0       	ldi	r19, 0x00	; 0
 50e:	05 c0       	rjmp	.+10     	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 510:	20 e1       	ldi	r18, 0x10	; 16
 512:	30 e0       	ldi	r19, 0x00	; 0
 514:	02 c0       	rjmp	.+4      	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 516:	20 e1       	ldi	r18, 0x10	; 16
 518:	32 e0       	ldi	r19, 0x02	; 2
 51a:	f8 01       	movw	r30, r16
 51c:	b7 fe       	sbrs	r11, 7
 51e:	07 c0       	rjmp	.+14     	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
 520:	60 81       	ld	r22, Z
 522:	71 81       	ldd	r23, Z+1	; 0x01
 524:	82 81       	ldd	r24, Z+2	; 0x02
 526:	93 81       	ldd	r25, Z+3	; 0x03
 528:	0c 5f       	subi	r16, 0xFC	; 252
 52a:	1f 4f       	sbci	r17, 0xFF	; 255
 52c:	06 c0       	rjmp	.+12     	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
 52e:	60 81       	ld	r22, Z
 530:	71 81       	ldd	r23, Z+1	; 0x01
 532:	80 e0       	ldi	r24, 0x00	; 0
 534:	90 e0       	ldi	r25, 0x00	; 0
 536:	0e 5f       	subi	r16, 0xFE	; 254
 538:	1f 4f       	sbci	r17, 0xFF	; 255
 53a:	a3 01       	movw	r20, r6
 53c:	db d0       	rcall	.+438    	; 0x6f4 <__ultoa_invert>
 53e:	88 2e       	mov	r8, r24
 540:	86 18       	sub	r8, r6
 542:	fb 2d       	mov	r31, r11
 544:	ff 77       	andi	r31, 0x7F	; 127
 546:	3f 2e       	mov	r3, r31
 548:	36 fe       	sbrs	r3, 6
 54a:	0d c0       	rjmp	.+26     	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
 54c:	23 2d       	mov	r18, r3
 54e:	2e 7f       	andi	r18, 0xFE	; 254
 550:	a2 2e       	mov	r10, r18
 552:	89 14       	cp	r8, r9
 554:	58 f4       	brcc	.+22     	; 0x56c <__LOCK_REGION_LENGTH__+0x16c>
 556:	34 fe       	sbrs	r3, 4
 558:	0b c0       	rjmp	.+22     	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
 55a:	32 fc       	sbrc	r3, 2
 55c:	09 c0       	rjmp	.+18     	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
 55e:	83 2d       	mov	r24, r3
 560:	8e 7e       	andi	r24, 0xEE	; 238
 562:	a8 2e       	mov	r10, r24
 564:	05 c0       	rjmp	.+10     	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
 566:	b8 2c       	mov	r11, r8
 568:	a3 2c       	mov	r10, r3
 56a:	03 c0       	rjmp	.+6      	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
 56c:	b8 2c       	mov	r11, r8
 56e:	01 c0       	rjmp	.+2      	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
 570:	b9 2c       	mov	r11, r9
 572:	a4 fe       	sbrs	r10, 4
 574:	0f c0       	rjmp	.+30     	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
 576:	fe 01       	movw	r30, r28
 578:	e8 0d       	add	r30, r8
 57a:	f1 1d       	adc	r31, r1
 57c:	80 81       	ld	r24, Z
 57e:	80 33       	cpi	r24, 0x30	; 48
 580:	21 f4       	brne	.+8      	; 0x58a <__LOCK_REGION_LENGTH__+0x18a>
 582:	9a 2d       	mov	r25, r10
 584:	99 7e       	andi	r25, 0xE9	; 233
 586:	a9 2e       	mov	r10, r25
 588:	09 c0       	rjmp	.+18     	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
 58a:	a2 fe       	sbrs	r10, 2
 58c:	06 c0       	rjmp	.+12     	; 0x59a <__LOCK_REGION_LENGTH__+0x19a>
 58e:	b3 94       	inc	r11
 590:	b3 94       	inc	r11
 592:	04 c0       	rjmp	.+8      	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
 594:	8a 2d       	mov	r24, r10
 596:	86 78       	andi	r24, 0x86	; 134
 598:	09 f0       	breq	.+2      	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
 59a:	b3 94       	inc	r11
 59c:	a3 fc       	sbrc	r10, 3
 59e:	10 c0       	rjmp	.+32     	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
 5a0:	a0 fe       	sbrs	r10, 0
 5a2:	06 c0       	rjmp	.+12     	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 5a4:	b2 14       	cp	r11, r2
 5a6:	80 f4       	brcc	.+32     	; 0x5c8 <__LOCK_REGION_LENGTH__+0x1c8>
 5a8:	28 0c       	add	r2, r8
 5aa:	92 2c       	mov	r9, r2
 5ac:	9b 18       	sub	r9, r11
 5ae:	0d c0       	rjmp	.+26     	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 5b0:	b2 14       	cp	r11, r2
 5b2:	58 f4       	brcc	.+22     	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 5b4:	b6 01       	movw	r22, r12
 5b6:	80 e2       	ldi	r24, 0x20	; 32
 5b8:	90 e0       	ldi	r25, 0x00	; 0
 5ba:	60 d0       	rcall	.+192    	; 0x67c <fputc>
 5bc:	b3 94       	inc	r11
 5be:	f8 cf       	rjmp	.-16     	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 5c0:	b2 14       	cp	r11, r2
 5c2:	18 f4       	brcc	.+6      	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 5c4:	2b 18       	sub	r2, r11
 5c6:	02 c0       	rjmp	.+4      	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
 5c8:	98 2c       	mov	r9, r8
 5ca:	21 2c       	mov	r2, r1
 5cc:	a4 fe       	sbrs	r10, 4
 5ce:	0f c0       	rjmp	.+30     	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
 5d0:	b6 01       	movw	r22, r12
 5d2:	80 e3       	ldi	r24, 0x30	; 48
 5d4:	90 e0       	ldi	r25, 0x00	; 0
 5d6:	52 d0       	rcall	.+164    	; 0x67c <fputc>
 5d8:	a2 fe       	sbrs	r10, 2
 5da:	16 c0       	rjmp	.+44     	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 5dc:	a1 fc       	sbrc	r10, 1
 5de:	03 c0       	rjmp	.+6      	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
 5e0:	88 e7       	ldi	r24, 0x78	; 120
 5e2:	90 e0       	ldi	r25, 0x00	; 0
 5e4:	02 c0       	rjmp	.+4      	; 0x5ea <__LOCK_REGION_LENGTH__+0x1ea>
 5e6:	88 e5       	ldi	r24, 0x58	; 88
 5e8:	90 e0       	ldi	r25, 0x00	; 0
 5ea:	b6 01       	movw	r22, r12
 5ec:	0c c0       	rjmp	.+24     	; 0x606 <__LOCK_REGION_LENGTH__+0x206>
 5ee:	8a 2d       	mov	r24, r10
 5f0:	86 78       	andi	r24, 0x86	; 134
 5f2:	51 f0       	breq	.+20     	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 5f4:	a1 fe       	sbrs	r10, 1
 5f6:	02 c0       	rjmp	.+4      	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 5f8:	8b e2       	ldi	r24, 0x2B	; 43
 5fa:	01 c0       	rjmp	.+2      	; 0x5fe <__LOCK_REGION_LENGTH__+0x1fe>
 5fc:	80 e2       	ldi	r24, 0x20	; 32
 5fe:	a7 fc       	sbrc	r10, 7
 600:	8d e2       	ldi	r24, 0x2D	; 45
 602:	b6 01       	movw	r22, r12
 604:	90 e0       	ldi	r25, 0x00	; 0
 606:	3a d0       	rcall	.+116    	; 0x67c <fputc>
 608:	89 14       	cp	r8, r9
 60a:	30 f4       	brcc	.+12     	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 60c:	b6 01       	movw	r22, r12
 60e:	80 e3       	ldi	r24, 0x30	; 48
 610:	90 e0       	ldi	r25, 0x00	; 0
 612:	34 d0       	rcall	.+104    	; 0x67c <fputc>
 614:	9a 94       	dec	r9
 616:	f8 cf       	rjmp	.-16     	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 618:	8a 94       	dec	r8
 61a:	f3 01       	movw	r30, r6
 61c:	e8 0d       	add	r30, r8
 61e:	f1 1d       	adc	r31, r1
 620:	80 81       	ld	r24, Z
 622:	b6 01       	movw	r22, r12
 624:	90 e0       	ldi	r25, 0x00	; 0
 626:	2a d0       	rcall	.+84     	; 0x67c <fputc>
 628:	81 10       	cpse	r8, r1
 62a:	f6 cf       	rjmp	.-20     	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 62c:	22 20       	and	r2, r2
 62e:	09 f4       	brne	.+2      	; 0x632 <__LOCK_REGION_LENGTH__+0x232>
 630:	4d ce       	rjmp	.-870    	; 0x2cc <vfprintf+0x22>
 632:	b6 01       	movw	r22, r12
 634:	80 e2       	ldi	r24, 0x20	; 32
 636:	90 e0       	ldi	r25, 0x00	; 0
 638:	21 d0       	rcall	.+66     	; 0x67c <fputc>
 63a:	2a 94       	dec	r2
 63c:	f7 cf       	rjmp	.-18     	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
 63e:	f6 01       	movw	r30, r12
 640:	86 81       	ldd	r24, Z+6	; 0x06
 642:	97 81       	ldd	r25, Z+7	; 0x07
 644:	02 c0       	rjmp	.+4      	; 0x64a <__LOCK_REGION_LENGTH__+0x24a>
 646:	8f ef       	ldi	r24, 0xFF	; 255
 648:	9f ef       	ldi	r25, 0xFF	; 255
 64a:	2b 96       	adiw	r28, 0x0b	; 11
 64c:	e2 e1       	ldi	r30, 0x12	; 18
 64e:	d7 c0       	rjmp	.+430    	; 0x7fe <__epilogue_restores__>

00000650 <strnlen_P>:
 650:	fc 01       	movw	r30, r24
 652:	05 90       	lpm	r0, Z+
 654:	61 50       	subi	r22, 0x01	; 1
 656:	70 40       	sbci	r23, 0x00	; 0
 658:	01 10       	cpse	r0, r1
 65a:	d8 f7       	brcc	.-10     	; 0x652 <strnlen_P+0x2>
 65c:	80 95       	com	r24
 65e:	90 95       	com	r25
 660:	8e 0f       	add	r24, r30
 662:	9f 1f       	adc	r25, r31
 664:	08 95       	ret

00000666 <strnlen>:
 666:	fc 01       	movw	r30, r24
 668:	61 50       	subi	r22, 0x01	; 1
 66a:	70 40       	sbci	r23, 0x00	; 0
 66c:	01 90       	ld	r0, Z+
 66e:	01 10       	cpse	r0, r1
 670:	d8 f7       	brcc	.-10     	; 0x668 <strnlen+0x2>
 672:	80 95       	com	r24
 674:	90 95       	com	r25
 676:	8e 0f       	add	r24, r30
 678:	9f 1f       	adc	r25, r31
 67a:	08 95       	ret

0000067c <fputc>:
 67c:	0f 93       	push	r16
 67e:	1f 93       	push	r17
 680:	cf 93       	push	r28
 682:	df 93       	push	r29
 684:	fb 01       	movw	r30, r22
 686:	23 81       	ldd	r18, Z+3	; 0x03
 688:	21 fd       	sbrc	r18, 1
 68a:	03 c0       	rjmp	.+6      	; 0x692 <fputc+0x16>
 68c:	8f ef       	ldi	r24, 0xFF	; 255
 68e:	9f ef       	ldi	r25, 0xFF	; 255
 690:	2c c0       	rjmp	.+88     	; 0x6ea <fputc+0x6e>
 692:	22 ff       	sbrs	r18, 2
 694:	16 c0       	rjmp	.+44     	; 0x6c2 <fputc+0x46>
 696:	46 81       	ldd	r20, Z+6	; 0x06
 698:	57 81       	ldd	r21, Z+7	; 0x07
 69a:	24 81       	ldd	r18, Z+4	; 0x04
 69c:	35 81       	ldd	r19, Z+5	; 0x05
 69e:	42 17       	cp	r20, r18
 6a0:	53 07       	cpc	r21, r19
 6a2:	44 f4       	brge	.+16     	; 0x6b4 <fputc+0x38>
 6a4:	a0 81       	ld	r26, Z
 6a6:	b1 81       	ldd	r27, Z+1	; 0x01
 6a8:	9d 01       	movw	r18, r26
 6aa:	2f 5f       	subi	r18, 0xFF	; 255
 6ac:	3f 4f       	sbci	r19, 0xFF	; 255
 6ae:	31 83       	std	Z+1, r19	; 0x01
 6b0:	20 83       	st	Z, r18
 6b2:	8c 93       	st	X, r24
 6b4:	26 81       	ldd	r18, Z+6	; 0x06
 6b6:	37 81       	ldd	r19, Z+7	; 0x07
 6b8:	2f 5f       	subi	r18, 0xFF	; 255
 6ba:	3f 4f       	sbci	r19, 0xFF	; 255
 6bc:	37 83       	std	Z+7, r19	; 0x07
 6be:	26 83       	std	Z+6, r18	; 0x06
 6c0:	14 c0       	rjmp	.+40     	; 0x6ea <fputc+0x6e>
 6c2:	8b 01       	movw	r16, r22
 6c4:	ec 01       	movw	r28, r24
 6c6:	fb 01       	movw	r30, r22
 6c8:	00 84       	ldd	r0, Z+8	; 0x08
 6ca:	f1 85       	ldd	r31, Z+9	; 0x09
 6cc:	e0 2d       	mov	r30, r0
 6ce:	09 95       	icall
 6d0:	89 2b       	or	r24, r25
 6d2:	e1 f6       	brne	.-72     	; 0x68c <fputc+0x10>
 6d4:	d8 01       	movw	r26, r16
 6d6:	16 96       	adiw	r26, 0x06	; 6
 6d8:	8d 91       	ld	r24, X+
 6da:	9c 91       	ld	r25, X
 6dc:	17 97       	sbiw	r26, 0x07	; 7
 6de:	01 96       	adiw	r24, 0x01	; 1
 6e0:	17 96       	adiw	r26, 0x07	; 7
 6e2:	9c 93       	st	X, r25
 6e4:	8e 93       	st	-X, r24
 6e6:	16 97       	sbiw	r26, 0x06	; 6
 6e8:	ce 01       	movw	r24, r28
 6ea:	df 91       	pop	r29
 6ec:	cf 91       	pop	r28
 6ee:	1f 91       	pop	r17
 6f0:	0f 91       	pop	r16
 6f2:	08 95       	ret

000006f4 <__ultoa_invert>:
 6f4:	fa 01       	movw	r30, r20
 6f6:	aa 27       	eor	r26, r26
 6f8:	28 30       	cpi	r18, 0x08	; 8
 6fa:	61 f1       	breq	.+88     	; 0x754 <__ultoa_invert+0x60>
 6fc:	20 31       	cpi	r18, 0x10	; 16
 6fe:	91 f1       	breq	.+100    	; 0x764 <__ultoa_invert+0x70>
 700:	e8 94       	clt
 702:	6f 93       	push	r22
 704:	6e 7f       	andi	r22, 0xFE	; 254
 706:	6e 5f       	subi	r22, 0xFE	; 254
 708:	7f 4f       	sbci	r23, 0xFF	; 255
 70a:	8f 4f       	sbci	r24, 0xFF	; 255
 70c:	9f 4f       	sbci	r25, 0xFF	; 255
 70e:	af 4f       	sbci	r26, 0xFF	; 255
 710:	b1 e0       	ldi	r27, 0x01	; 1
 712:	40 d0       	rcall	.+128    	; 0x794 <__ultoa_invert+0xa0>
 714:	b4 e0       	ldi	r27, 0x04	; 4
 716:	3e d0       	rcall	.+124    	; 0x794 <__ultoa_invert+0xa0>
 718:	67 0f       	add	r22, r23
 71a:	78 1f       	adc	r23, r24
 71c:	89 1f       	adc	r24, r25
 71e:	9a 1f       	adc	r25, r26
 720:	a1 1d       	adc	r26, r1
 722:	68 0f       	add	r22, r24
 724:	79 1f       	adc	r23, r25
 726:	8a 1f       	adc	r24, r26
 728:	91 1d       	adc	r25, r1
 72a:	a1 1d       	adc	r26, r1
 72c:	6a 0f       	add	r22, r26
 72e:	71 1d       	adc	r23, r1
 730:	81 1d       	adc	r24, r1
 732:	91 1d       	adc	r25, r1
 734:	a1 1d       	adc	r26, r1
 736:	22 d0       	rcall	.+68     	; 0x77c <__ultoa_invert+0x88>
 738:	09 f4       	brne	.+2      	; 0x73c <__ultoa_invert+0x48>
 73a:	68 94       	set
 73c:	3f 91       	pop	r19
 73e:	06 2e       	mov	r0, r22
 740:	00 0c       	add	r0, r0
 742:	30 19       	sub	r19, r0
 744:	00 0c       	add	r0, r0
 746:	00 0c       	add	r0, r0
 748:	30 19       	sub	r19, r0
 74a:	30 5d       	subi	r19, 0xD0	; 208
 74c:	31 93       	st	Z+, r19
 74e:	ce f6       	brtc	.-78     	; 0x702 <__ultoa_invert+0xe>
 750:	cf 01       	movw	r24, r30
 752:	08 95       	ret
 754:	46 2f       	mov	r20, r22
 756:	47 70       	andi	r20, 0x07	; 7
 758:	40 5d       	subi	r20, 0xD0	; 208
 75a:	41 93       	st	Z+, r20
 75c:	b3 e0       	ldi	r27, 0x03	; 3
 75e:	0f d0       	rcall	.+30     	; 0x77e <__ultoa_invert+0x8a>
 760:	c9 f7       	brne	.-14     	; 0x754 <__ultoa_invert+0x60>
 762:	f6 cf       	rjmp	.-20     	; 0x750 <__ultoa_invert+0x5c>
 764:	46 2f       	mov	r20, r22
 766:	4f 70       	andi	r20, 0x0F	; 15
 768:	40 5d       	subi	r20, 0xD0	; 208
 76a:	4a 33       	cpi	r20, 0x3A	; 58
 76c:	18 f0       	brcs	.+6      	; 0x774 <__ultoa_invert+0x80>
 76e:	49 5d       	subi	r20, 0xD9	; 217
 770:	31 fd       	sbrc	r19, 1
 772:	40 52       	subi	r20, 0x20	; 32
 774:	41 93       	st	Z+, r20
 776:	02 d0       	rcall	.+4      	; 0x77c <__ultoa_invert+0x88>
 778:	a9 f7       	brne	.-22     	; 0x764 <__ultoa_invert+0x70>
 77a:	ea cf       	rjmp	.-44     	; 0x750 <__ultoa_invert+0x5c>
 77c:	b4 e0       	ldi	r27, 0x04	; 4
 77e:	a6 95       	lsr	r26
 780:	97 95       	ror	r25
 782:	87 95       	ror	r24
 784:	77 95       	ror	r23
 786:	67 95       	ror	r22
 788:	ba 95       	dec	r27
 78a:	c9 f7       	brne	.-14     	; 0x77e <__ultoa_invert+0x8a>
 78c:	00 97       	sbiw	r24, 0x00	; 0
 78e:	61 05       	cpc	r22, r1
 790:	71 05       	cpc	r23, r1
 792:	08 95       	ret
 794:	9b 01       	movw	r18, r22
 796:	ac 01       	movw	r20, r24
 798:	0a 2e       	mov	r0, r26
 79a:	06 94       	lsr	r0
 79c:	57 95       	ror	r21
 79e:	47 95       	ror	r20
 7a0:	37 95       	ror	r19
 7a2:	27 95       	ror	r18
 7a4:	ba 95       	dec	r27
 7a6:	c9 f7       	brne	.-14     	; 0x79a <__ultoa_invert+0xa6>
 7a8:	62 0f       	add	r22, r18
 7aa:	73 1f       	adc	r23, r19
 7ac:	84 1f       	adc	r24, r20
 7ae:	95 1f       	adc	r25, r21
 7b0:	a0 1d       	adc	r26, r0
 7b2:	08 95       	ret

000007b4 <__mulqi3>:
 7b4:	00 24       	eor	r0, r0

000007b6 <__mulqi3_loop>:
 7b6:	80 fd       	sbrc	r24, 0
 7b8:	06 0e       	add	r0, r22
 7ba:	66 0f       	add	r22, r22
 7bc:	11 f0       	breq	.+4      	; 0x7c2 <__mulqi3_exit>
 7be:	86 95       	lsr	r24
 7c0:	d1 f7       	brne	.-12     	; 0x7b6 <__mulqi3_loop>

000007c2 <__mulqi3_exit>:
 7c2:	80 2d       	mov	r24, r0
 7c4:	08 95       	ret

000007c6 <__prologue_saves__>:
 7c6:	2f 92       	push	r2
 7c8:	3f 92       	push	r3
 7ca:	4f 92       	push	r4
 7cc:	5f 92       	push	r5
 7ce:	6f 92       	push	r6
 7d0:	7f 92       	push	r7
 7d2:	8f 92       	push	r8
 7d4:	9f 92       	push	r9
 7d6:	af 92       	push	r10
 7d8:	bf 92       	push	r11
 7da:	cf 92       	push	r12
 7dc:	df 92       	push	r13
 7de:	ef 92       	push	r14
 7e0:	ff 92       	push	r15
 7e2:	0f 93       	push	r16
 7e4:	1f 93       	push	r17
 7e6:	cf 93       	push	r28
 7e8:	df 93       	push	r29
 7ea:	cd b7       	in	r28, 0x3d	; 61
 7ec:	de b7       	in	r29, 0x3e	; 62
 7ee:	ca 1b       	sub	r28, r26
 7f0:	db 0b       	sbc	r29, r27
 7f2:	0f b6       	in	r0, 0x3f	; 63
 7f4:	f8 94       	cli
 7f6:	de bf       	out	0x3e, r29	; 62
 7f8:	0f be       	out	0x3f, r0	; 63
 7fa:	cd bf       	out	0x3d, r28	; 61
 7fc:	09 94       	ijmp

000007fe <__epilogue_restores__>:
 7fe:	2a 88       	ldd	r2, Y+18	; 0x12
 800:	39 88       	ldd	r3, Y+17	; 0x11
 802:	48 88       	ldd	r4, Y+16	; 0x10
 804:	5f 84       	ldd	r5, Y+15	; 0x0f
 806:	6e 84       	ldd	r6, Y+14	; 0x0e
 808:	7d 84       	ldd	r7, Y+13	; 0x0d
 80a:	8c 84       	ldd	r8, Y+12	; 0x0c
 80c:	9b 84       	ldd	r9, Y+11	; 0x0b
 80e:	aa 84       	ldd	r10, Y+10	; 0x0a
 810:	b9 84       	ldd	r11, Y+9	; 0x09
 812:	c8 84       	ldd	r12, Y+8	; 0x08
 814:	df 80       	ldd	r13, Y+7	; 0x07
 816:	ee 80       	ldd	r14, Y+6	; 0x06
 818:	fd 80       	ldd	r15, Y+5	; 0x05
 81a:	0c 81       	ldd	r16, Y+4	; 0x04
 81c:	1b 81       	ldd	r17, Y+3	; 0x03
 81e:	aa 81       	ldd	r26, Y+2	; 0x02
 820:	b9 81       	ldd	r27, Y+1	; 0x01
 822:	ce 0f       	add	r28, r30
 824:	d1 1d       	adc	r29, r1
 826:	0f b6       	in	r0, 0x3f	; 63
 828:	f8 94       	cli
 82a:	de bf       	out	0x3e, r29	; 62
 82c:	0f be       	out	0x3f, r0	; 63
 82e:	cd bf       	out	0x3d, r28	; 61
 830:	ed 01       	movw	r28, r26
 832:	08 95       	ret

00000834 <_exit>:
 834:	f8 94       	cli

00000836 <__stop_program>:
 836:	ff cf       	rjmp	.-2      	; 0x836 <__stop_program>
